#### Anatomy of a deployment pipeline

[DRAFT lucidchart](https://lucid.app/lucidchart/3c5f3fc1-ad2a-40f6-9f89-74b6dbb1fe14/edit?invitationId=inv_07475903-1de7-457b-88d1-74adfe4f4ba2&page=t3zIPiA-na8H#)

![[./deployment-pipeline_files/figure-latex/deployment-pipeline.png]]

Application architecture:
- Monolith with the app v.s. as a separate service (or microservice)
- Composing apps & apps, composing apps & endpoints
	
Configuration management
- ❌ Configuration in code
-  ✅Configuration in declarative files - YAML / JSON
- Example from telco customer support agent
![[./deployment-pipeline_files/figure-latex/config-mgmt.png]]
	- [product sub-agent configuration YAML ](https://github.com/databricks-field-eng/genai-customer-support-demo/blob/main/configs/agents/product.yaml#L3)
	- [product sub-agent LLM pydantic model](https://github.com/databricks-field-eng/genai-customer-support-demo/blob/main/telco_support_agent/config/schemas.py#L10)
	- [configuration loaded into `BaseAgent` class](https://github.com/databricks-field-eng/genai-customer-support-demo/blob/main/telco_support_agent/agents/base_agent.py#L115)

Infrastructure and resource management (need diagram)
- Databricks Asset Bundles 
	- environments-specific configurations such as UC catalogs and schemas specified in `databricks.yml`
	- `databricks.yml` parameters injected into deployment job pipeline
	- notebook within deployment job reads 