# Identifying value streams 

## Introduction

Customers come to us and ask 

LLM chains such as RAG are fairly linear. Their structure is relatively well-defined compared to agents. Simple RAG pipelines may incorporate a retrieval step and a generation step. A more complex RAG pipelines might include additional components 

But an agentic application is more complex: not only are there a variety of tools available to an agent, an agent's reasoning pathways is also more open-ended. Compounding this complexity is also how agentic applications are built to automate business workflows that are more complex than the question-and-answer interfaces of traditional RAG applications. For instance, insurance claims processing can go through multiple rounds of asking for and verifying customer information. A telco customer support agent that investigates an unexpectedly high bill charge may need to first identify the cause of the anomaly, and then wait for a human to approve a refund. 

As outlined in the chapter, these agentic applications need to be built taking into account multiple goals:
- automating a business need 
- building an automation pipeline that 
- including software modules that are modular and resuable across use cases 
- customising general software modules for the specifics of a use case. 

Given this, customer's usually ask - where do we start? 

## Hierarchy of priorities in a project

### Business process mapping

### Translating business process into a technical architecture

Data sources available
What should be linear workflows and what should be agentic workflows

### Instrumentating observability

### Analysing traces produced by observability tools and designing test suites 